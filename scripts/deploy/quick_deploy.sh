#!/bin/bash
# üöÄ –ë—ã—Å—Ç—Ä—ã–π deployment script —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ó–∞–ø—É—Å–∫ SAFE deployment —Å –Ω–æ–≤—ã–º –∫–æ–¥–æ–º..."

# 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å
echo "üîç –ó–∞–≥—Ä—É–∑–∫–∞ environment variables..."

# –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ -f ".env.production.server" ]; then
    echo "üìÅ –ó–∞–≥—Ä—É–∂–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.production.server"
    source .env.production.server
fi

if [ -f ".admin_api_key" ]; then
    echo "üîë –ó–∞–≥—Ä—É–∂–∞—é API key –∏–∑ .admin_api_key"
    source .admin_api_key
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω—É–∂–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ environment variables..."

if [ -z "$ES_USERNAME" ] || [ -z "$ES_PASSWORD" ] || [ -z "$ADMIN_API_KEY" ]; then
    echo "‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
    echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏: ./setup_production_env.sh"
    echo ""
    echo "–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏ –≤—Ä—É—á–Ω—É—é:"
    echo "export ES_HOST=your-elasticsearch-host"
    echo "export ES_USERNAME=your-username"
    echo "export ES_PASSWORD=your-password"
    echo "export ADMIN_API_KEY=your-secure-key"
    exit 1
fi

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 2. Backup —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ backup..."
if docker-compose -f docker-compose.prod.yml ps | grep -q "ai-service-prod"; then
    echo "–°–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—É—â–∏–π –æ–±—Ä–∞–∑ –∫–∞–∫ backup..."
    docker tag $(docker-compose -f docker-compose.prod.yml images -q ai-service) ai-service:backup-$(date +%Y%m%d-%H%M%S) || true
fi

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Elasticsearch
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Elasticsearch..."
if curl -s -u "$ES_USERNAME:$ES_PASSWORD" "http://$ES_HOST:9200/_cluster/health" > /dev/null; then
    echo "‚úÖ Elasticsearch –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ö†Ô∏è  WARNING: Elasticsearch –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º (–±—É–¥–µ—Ç fallback)"
fi

# 4. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker-compose -f docker-compose.prod.yml down || true

# 5. –ë–∏–ª–¥–∏–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–∑
echo "üî® –°–±–æ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏..."
docker-compose -f docker-compose.prod.yml build ai-service

# 6. –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–∞ env —Ñ–∞–π–ª–∞: –±–∞–∑–æ–≤—ã–π + server-specific
if [ -f ".env.production.server" ]; then
    docker-compose -f docker-compose.prod.yml --env-file .env.production --env-file .env.production.server up -d
else
    # Fallback –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    docker-compose -f docker-compose.prod.yml up -d
fi

# 7. –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ (–¥–æ 60 —Å–µ–∫)
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
for i in {1..12}; do
    if curl -s http://localhost:8000/health > /dev/null; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç!"
        break
    fi
    echo "–ü–æ–ø—ã—Ç–∫–∞ $i/12 —á–µ—Ä–µ–∑ 5 —Å–µ–∫..."
    sleep 5
done

# 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
echo "=== Docker —Å—Ç–∞—Ç—É—Å ==="
docker-compose -f docker-compose.prod.yml ps

echo ""
echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ ==="
docker-compose -f docker-compose.prod.yml logs --tail=20 ai-service

# 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ endpoints
echo ""
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoints..."

# Health check
if curl -s http://localhost:8000/health > /dev/null; then
    echo "‚úÖ Health check: OK"
else
    echo "‚ùå Health check: FAILED"
fi

# Admin endpoint —Å API key
if [ -n "$ADMIN_API_KEY" ]; then
    if curl -s -H "X-API-Key: $ADMIN_API_KEY" http://localhost:8000/stats > /dev/null; then
        echo "‚úÖ Admin API: OK"
    else
        echo "‚ùå Admin API: FAILED"
    fi
fi

# API –±–µ–∑ –∫–ª—é—á–∞ (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å)
if curl -s -X POST -H "Content-Type: application/json" -d '{"text":"—Ç–µ—Å—Ç"}' http://localhost:8000/process > /dev/null; then
    echo "‚úÖ Main API: OK"
else
    echo "‚ùå Main API: FAILED"
fi

echo ""
echo "üéâ Deployment –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìã –ß—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å:"
echo "1. –õ–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs -f ai-service"
echo "2. Health: curl http://localhost:8000/health"
echo "3. Admin: curl -H 'X-API-Key: $ADMIN_API_KEY' http://localhost:8000/stats"
echo ""

if curl -s http://localhost:8000/health | grep -q "healthy"; then
    echo "‚úÖ üéØ DEPLOYMENT –£–°–ü–ï–®–ï–ù!"
else
    echo "‚ùå üö® DEPLOYMENT FAILED - –ø—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏!"
    echo "Rollback: docker-compose -f docker-compose.prod.yml down && docker run -d --name ai-service-rollback -p 8000:8000 ai-service:backup-*"
fi
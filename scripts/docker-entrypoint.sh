#!/bin/bash
set -e

# Docker Entrypoint Script for AI Service
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Elasticsearch –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞

echo "=================================================="
echo "AI Service - Docker Entrypoint"
echo "=================================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
ES_HOST="${ES_HOSTS:-elasticsearch:9200}"
ES_TIMEOUT="${ES_STARTUP_TIMEOUT:-60}"
INDEX_PREFIX="${ES_INDEX_PREFIX:-sanctions}"
SKIP_ES_INIT="${SKIP_ES_INIT:-false}"

# –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–µ—Ä–≤—ã–π —Ö–æ—Å—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
ES_FIRST_HOST=$(echo "$ES_HOST" | cut -d',' -f1)

echo ""
echo "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
echo "  Elasticsearch: $ES_FIRST_HOST"
echo "  Index Prefix: $INDEX_PREFIX"
echo "  Skip Init: $SKIP_ES_INIT"
echo ""

# –§—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–Ω–∏—è Elasticsearch
wait_for_elasticsearch() {
    echo "üîÑ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Elasticsearch..."

    local counter=0
    local max_attempts=$((ES_TIMEOUT / 3))

    while [ $counter -lt $max_attempts ]; do
        if curl -sf "http://$ES_FIRST_HOST/_cluster/health" > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ Elasticsearch –≥–æ—Ç–æ–≤${NC}"
            return 0
        fi

        counter=$((counter + 1))
        echo "  –ü–æ–ø—ã—Ç–∫–∞ $counter/$max_attempts..."
        sleep 3
    done

    echo -e "${RED}‚ùå Elasticsearch –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ ${ES_TIMEOUT}s${NC}"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–¥–µ–∫—Å–æ–≤
check_indices() {
    local ac_index="${INDEX_PREFIX}_ac_patterns"
    local vector_index="${INDEX_PREFIX}_vectors"

    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤..."

    local ac_exists=$(curl -sf "http://$ES_FIRST_HOST/$ac_index/_count" > /dev/null 2>&1 && echo "true" || echo "false")
    local vector_exists=$(curl -sf "http://$ES_FIRST_HOST/$vector_index/_count" > /dev/null 2>&1 && echo "true" || echo "false")
    local ac_doc_count=0
    local vector_count=0

    if [ "$ac_exists" = "true" ]; then
        ac_doc_count=$(curl -sf "http://$ES_FIRST_HOST/$ac_index/_count" | python3 -c "import sys, json; print(json.load(sys.stdin).get('count', 0))" 2>/dev/null || echo "0")
        echo -e "${GREEN}  ‚úÖ $ac_index: $ac_doc_count –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤${NC}"
    else
        echo -e "${YELLOW}  ‚ö†Ô∏è  $ac_index: –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    fi

    if [ "$vector_exists" = "true" ]; then
        vector_count=$(curl -sf "http://$ES_FIRST_HOST/$vector_index/_count" | python3 -c "import sys, json; print(json.load(sys.stdin).get('count', 0))" 2>/dev/null || echo "0")
        echo -e "${GREEN}  ‚úÖ $vector_index: $vector_count –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤${NC}"
    else
        echo -e "${YELLOW}  ‚ö†Ô∏è  $vector_index: –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    fi

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º true –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã AC –∏–Ω–¥–µ–∫—Å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
    if [ "$ac_exists" = "true" ] && [ "${ac_doc_count:-0}" -gt 0 ]; then
        return 0
    else
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Elasticsearch
initialize_elasticsearch() {
    echo "üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Elasticsearch..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏
    local patterns_dir="/app/output/sanctions"

    if [ ! -d "$patterns_dir" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $patterns_dir –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        echo "‚ÑπÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö..."

        # –°–æ–∑–¥–∞—ë–º –ø—É—Å—Ç—ã–µ –∏–Ω–¥–µ–∫—Å—ã —á–µ—Ä–µ–∑ Python —Å–∫—Ä–∏–ø—Ç
        python3 /app/scripts/create_empty_indices.py \
            --es-host "$ES_FIRST_HOST" \
            --index-prefix "$INDEX_PREFIX"

        return $?
    fi

    # –ò—â–µ–º —Ñ–∞–π–ª —Å –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏
    local patterns_file=$(find "$patterns_dir" -name "ac_patterns_*.json" -type f | sort -r | head -n1)

    if [ -z "$patterns_file" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª —Å AC –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        echo "‚ÑπÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö..."

        python3 /app/scripts/create_empty_indices.py \
            --es-host "$ES_FIRST_HOST" \
            --index-prefix "$INDEX_PREFIX"

        return $?
    fi

    echo "üì¶ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤: $(basename $patterns_file)"

    # –ò—â–µ–º —Ñ–∞–π–ª —Å –≤–µ–∫—Ç–æ—Ä–∞–º–∏
    local vectors_file=$(find "$patterns_dir" -name "vectors_*.json" -type f | sort -r | head -n1)

    # –ó–∞–ø—É—Å–∫–∞–µ–º deployment —Å–∫—Ä–∏–ø—Ç
    if [ -n "$vectors_file" ]; then
        echo "üì¶ –ù–∞–π–¥–µ–Ω —Ñ–∞–π–ª –≤–µ–∫—Ç–æ—Ä–æ–≤: $(basename $vectors_file)"
        python3 /app/scripts/deploy_to_elasticsearch.py \
            --es-host "$ES_FIRST_HOST" \
            --index-prefix "$INDEX_PREFIX" \
            --patterns-file "$patterns_file" \
            --vectors-file "$vectors_file" \
            --create-vector-indices
    else
        echo "‚ö†Ô∏è  –§–∞–π–ª –≤–µ–∫—Ç–æ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º —Ç–æ–ª—å–∫–æ AC –∏–Ω–¥–µ–∫—Å"
        python3 /app/scripts/deploy_to_elasticsearch.py \
            --es-host "$ES_FIRST_HOST" \
            --index-prefix "$INDEX_PREFIX" \
            --patterns-file "$patterns_file"
    fi

    return $?
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    # 1. –û–∂–∏–¥–∞–Ω–∏–µ Elasticsearch
    if ! wait_for_elasticsearch; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è Elasticsearch${NC}"
        echo "‚ÑπÔ∏è  –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ Elasticsearch..."
        echo "‚ö†Ô∏è  –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å!"
    else
        # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
        if check_indices; then
            echo -e "${GREEN}‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç —Å –¥–∞–Ω–Ω—ã–º–∏${NC}"
        else
            if [ "$SKIP_ES_INIT" = "true" ]; then
                echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ (SKIP_ES_INIT=true)${NC}"
            else
                # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Elasticsearch
                if initialize_elasticsearch; then
                    echo -e "${GREEN}‚úÖ Elasticsearch –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
                    check_indices
                else
                    echo -e "${YELLOW}‚ö†Ô∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏${NC}"
                    echo "‚ÑπÔ∏è  –°–µ—Ä–≤–∏—Å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç—É, –Ω–æ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã"
                fi
            fi
        fi
    fi

    echo ""
    echo "=================================================="
    echo "üöÄ –ó–∞–ø—É—Å–∫ AI Service"
    echo "=================================================="
    echo ""

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Å–æ–∑–¥–∞–Ω–Ω—ã–º –∏–Ω–¥–µ–∫—Å–∞–º
    export ES_AC_INDEX="${INDEX_PREFIX}_ac_patterns"
    export ES_VECTOR_INDEX="${INDEX_PREFIX}_vectors"

    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    exec "$@"
}

# –ó–∞–ø—É—Å–∫
main "$@"
